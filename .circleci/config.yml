# Warzone 2100 CircleCI 2.0 configuration file
#
version: 2
jobs:

  # Ubuntu 18.04 (CMake)
  ubuntu_18_04_build:
    docker:
      - image: ubuntu:18.04

    steps:
      - run:
          name: Install essential packages
          command: |
            apt-get update && apt-get install -y git ssh tar gzip ca-certificates curl

      - run:
          name: Install WZ Prereqs
          command: |
            apt-get -u update
            DEBIAN_FRONTEND=noninteractive apt-get -y install clang ninja-build pkg-config libpng-dev libsdl2-dev libopenal-dev libphysfs-dev libvorbis-dev libtheora-dev libglew-dev libxrandr-dev zip unzip qtscript5-dev qt5-default libfribidi-dev libfreetype6-dev libharfbuzz-dev libfontconfig1-dev docbook-xsl xsltproc asciidoc gettext git cmake sudo

      - checkout

      # Init Git Submodules
      - run:
          name: Pull Submodules
          command: git submodule update --init --recursive

      - run:
          name: Build WZ with Clang
          command: |
            cmake '-H.' -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWZ_ENABLE_WARNINGS:BOOL=ON -G"Ninja"
            cmake --build build
          environment:
            CC: /usr/bin/clang
            CXX: /usr/bin/clang++
	
  # macOS build (Xcode 9.4.1)
  macos_xcode_9_4_1_build:

    # Specify the Xcode version to use
    macos:
      xcode: "9.4.1"

    environment:
      MACOSX_DEPLOYMENT_TARGET: 10.9

    steps:
      - checkout

      # Init Git Submodules
      - run:
          name: Pull Submodules
          command: git submodule update --init --recursive

      # Install Prereqs
      - run:
          name: Install Prereqs
          command: |
            brew install cmake
            brew install gettext
            gem install asciidoctor -v 1.5.8 --no-document
            brew install gcc@7
            bundle install --gemfile="macosx/BuildBot/Gemfile"

      # Build
      - run:
          name: Build Warzone
          command: |
            source build_tools/ci/travis/export_build_output_desc.sh
            macosx/BuildBot/travis_cmake_build.sh "${WZ_BUILD_DESC_PREFIX}-" "tmp/wz_upload"

      # Collect and save build artifacts
      - store_artifacts:
          path: tmp/wz_upload
          destination: macos_build_results

workflows:
  version: 2
  all_builds:
    jobs:
      - ubuntu_18_04_build
      - macos_xcode_9_4_1_build
